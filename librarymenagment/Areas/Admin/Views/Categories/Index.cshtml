@model PaginatedList<librarymenagment.Models.Category>
@using librarymenagment.Helpers

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-area="Admin" asp-action="Create">Create New</a>
</p>
<form asp-area="Admin" asp-action="Index" method="get">
    <div class="row mb-3">
        <div class="col-md-8">
            <label class="form-label">Search:</label>
            <input type="text" name="search" class="form-control" value="@ViewData["CurrentSearch"]" />
        </div>
        <div class="col-md-2">
            <div class="form-check mt-4">
                <input class="form-check-input" type="checkbox" name="activeOnly" id="activeOnly" value="true" @(ViewData["CurrentActiveFilter"]?.ToString() == "True" ? "checked" : "")>
                <label class="form-check-label" for="activeOnly">
                    Active Only
                </label>
            </div>
        </div>
        <div class="col-md-2 d-flex align-items-end">
            <button type="submit" class="btn btn-primary me-2">Apply</button>
            <a asp-action="Index" class="btn btn-secondary">Clear</a>
        </div>
    </div>
</form>
<style>
    .sort-header {
        position: relative;
        cursor: pointer;
        text-decoration: none;
        color: #212529;
    }

    .sort-header:hover {
        color: #0056b3;
    }

    .sort-indicator::after {
        content: '↕';
        position: relative;
        left: 5px;
        color: #999;
    }

    .sort-asc::after {
        content: '↑';
        position: relative;
        left: 5px;
        color: #000;
    }

    .sort-desc::after {
        content: '↓';
        position: relative;
        left: 5px;
        color: #000;
    }
</style>
<table class="table">
    <thead>
        <tr>
            <th>
                <a class="sort-header @(ViewData["CurrentSort"]?.ToString() == "" ? "sort-asc" : ViewData["CurrentSort"]?.ToString() == "name_desc" ? "sort-desc" : "sort-indicator")"
                   asp-action="Index" asp-area="Admin"
                   asp-route-sortOrder="@ViewData["NameSortParam"]"
                   asp-route-search="@ViewData["CurrentSearch"]">
                    @Html.DisplayNameFor(model => model.First().Name)
                </a>
            </th>
            <th>
                <a class="sort-header @(ViewData["CurrentSort"]?.ToString() == "createdAt" ? "sort-asc" : ViewData["CurrentSort"]?.ToString() == "createdAt_desc" ? "sort-desc" : "sort-indicator")"
                   asp-action="Index" asp-area="Admin"
                   asp-route-sortOrder="@ViewData["CreatedAtSortParam"]"
                   asp-route-search="@ViewData["CurrentSearch"]">
                    @Html.DisplayNameFor(model => model.First().CreatedAt)
                </a>
            </th>
            <th>
                <a class="sort-header @(ViewData["CurrentSort"]?.ToString() == "updatedAt" ? "sort-asc" : ViewData["CurrentSort"]?.ToString() == "updatedAt_desc" ? "sort-desc" : "sort-indicator")"
                   asp-action="Index" asp-area="Admin"
                   asp-route-sortOrder="@ViewData["UpdatedAtSortParam"]"
                   asp-route-search="@ViewData["CurrentSearch"]">
                    @Html.DisplayNameFor(model => model.First().UpdatedAt)
                </a>
            </th>
            <th>
                <a class="sort-header @(ViewData["CurrentSort"]?.ToString() == "active" ? "sort-asc" : ViewData["CurrentSort"]?.ToString() == "active_desc" ? "sort-desc" : "sort-indicator")"
                   asp-action="Index" asp-area="Admin"
                   asp-route-sortOrder="@ViewData["ActiveSortParam"]"
                   asp-route-search="@ViewData["CurrentSearch"]">
                    @Html.DisplayNameFor(model => model.First().Active)
                </a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Active)
            </td>
            <td>
                <a asp-area="Admin" class="btn btn-primary" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
                <a asp-area="Admin" class="btn btn-info" asp-action="Details" asp-route-id="@item.Id">Details</a>
                <a asp-area="Admin" class="btn btn-danger" asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
    }
    </tbody>
</table>
<nav aria-label="Page navigation">
    <ul class="pagination">
        <li class="page-item @(!Model.HasPreviousPage ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-area="Admin"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentSearch="@ViewData["CurrentSearch"]"
               asp-route-sortOrder="@ViewData["CurrentSort"]">
                Previous
            </a>
        </li>
        <li class="page-item @(!Model.HasNextPage ? "disabled" : "")">
            <a class="page-link" asp-action="Index" asp-area="Admin"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentSearch="@ViewData["CurrentSearch"]"
               asp-route-sortOrder="@ViewData["CurrentSort"]">
                Next
            </a>
        </li>
    </ul>
</nav>