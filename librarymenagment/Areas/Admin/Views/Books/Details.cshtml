@using Microsoft.AspNetCore.Identity
@model librarymenagment.Models.Book
@inject UserManager<IdentityUser> UserManager

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Book</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Copies)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Copies)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Author)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Author.Name)
            @Html.DisplayFor(model => model.Author.LastName)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.Name)
        </dd>
                <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedAt)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.CreatedAt)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.UpdatedAt)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.UpdatedAt)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Active)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Active)
        </dd>
    </dl>
</div>
<div>
    <a asp-area="Admin" asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-area="Admin" asp-action="Index">Back to List</a>
</div>
<div class="mt-6">
	<h3>Comments</h3>
    <div id="comments-list">
        <p>No comments</p>
    </div>
    <form id="CommentForm" method="post">
        <input type="text" name="Comment" value="" />
		<button>Submit</button>
    </form>
</div>

@section Scripts {
    <script>
        function addComments(data) {
            function addComment(comment){
				$("#comments-list").append(`
					<h4>${comment.user.email}</h4>
                    <p>${comment.description}</p>
                `);
            }
            if (data.length > 0) {
                $("#comments-list").empty();
            } else {
                $(addComment).html("<p>No comments</p>");
            }
			data.map(el => addComment(el)); 
        }

        function getComments(){
             $.ajax({
                url: "/api/Comments?bookId=" + @Model?.Id,
                type: "GET",
                success: function (data) {
                    addComments(data);
                }
            });
        }

	    $(document).ready(function () {
			getComments();

			$("#CommentForm").submit(function (e) {
				e.preventDefault();
                const payload = {
                    BookId: @Model?.Id,
                    Description: $("input[name='Comment']").val(),
                    Active: true,
                }
				$.ajax({
					url: "/api/Comments",
					type: "POST",
                    contentType: "application/json",
					data: JSON.stringify(payload),
					success: function (data) {
                       getComments();
					}
				});
			});
	    });
    </script>
}